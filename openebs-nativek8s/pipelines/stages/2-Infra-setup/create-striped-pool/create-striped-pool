#!/bin/bash
set -x
pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/2-Infra-setup/create-striped-pool/create-striped-pool node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'

}

node() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile

time="date"
current_time=$(eval $time)

#pooling over previous job to complete
echo "*******Creating cstor-pool**************"
bash openebs-nativek8s/utils/pooling jobname:s2-j1-deploy-openebs
bash openebs-nativek8s/utils/e2e-cr jobname:s2-j2-cstor-striped-pool jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

run_id="striped";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=cstor-block-device-pool-provision metadata=${run_id})
echo $test_name
cd litmus

# copy the content of deployer run_litmus_test.yml into a different file to update the test specific parameters.
cp providers/cstor/cstor-block-device-pool/run_litmus_test.yml create_striped_pool.yml

#################
## RUNNER MAIN ##
#################

sed -i -e 's/app: cstor-block-device-pool-provision/app: cstor-striped-pool-provision/g' \
-e 's/generateName: cstor-block-device-pool-provision/generateName: cstor-block-device-striped-pool-provision/g' \
-e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/value: cstor-block-disk-pool/value: cstor-block-disk-pool-stripe/g' create_striped_pool.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' create_striped_pool.yml

cat create_striped_pool.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='app:cstor-striped-pool-provision' job=create_striped_pool.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s2-j2-cstor-striped-pool $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################

rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-nativek8s/utils/e2e-cr jobname:s2-j2-cstor-striped-pool jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi