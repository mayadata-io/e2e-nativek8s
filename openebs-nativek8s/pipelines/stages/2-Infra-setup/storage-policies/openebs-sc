#!/bin/bash
pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/2-Infra-setup/storage-policies/openebs-sc node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$RELEASE_TAG'"'
}

node() {

time="date"
current_time=$(eval $time)
job_id=$(echo $1)
pipeline_id=$(echo $2)
releaseTag=$(echo $3)
source ~/.profile

present_dir=$(pwd)
echo $present_dir

#pooling over previous job to complete
echo "***********Applying openebs-storage-clas********"
bash openebs-nativek8s/utils/pooling jobname:s2-j2-cstor-striped-pool
bash openebs-nativek8s/utils/e2e-cr jobname:s2-j3-policies jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"

test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=cstor-storage-policies metadata="")
echo $test_name

cd litmus
echo "Running the litmus test.."
sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/cstor-sparse-pool/cstor-block-disk-pool-stripe/g' providers/cstor-storage-policies/run_litmus_test.yml
run_test=providers/cstor-storage-policies/run_litmus_test.yml

cat $run_test

bash ../openebs-nativek8s/utils/litmus_job_runner label='app:cstor-storage-policy' job=$run_test

echo "Dumping state of cluster post job run"; echo ""
bash ../openebs-nativek8s/utils/dump_cluster_state;

cd ..
bash openebs-nativek8s/utils/event_updater jobname:s2-j7-policies $test_name jobid:"$job_id" pipelineid:"$pipeline_id"

#################
## GET RESULT  ##
#################

rc_val=$(echo $?)

## Check the test status & result from the litmus result custom resource
source ~/.profile
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-nativek8s/utils/e2e-cr jobname:s2-j7-policies jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi

}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi