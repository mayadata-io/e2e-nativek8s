#!/bin/bash

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port -o LogLevel=ERROR 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/2-zfs-localpv-provisioner/zfs-controller-HA run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'

}

#######################################
#    Sclae ZFS LocalPV controller     #
#######################################

run_job() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
source ~/.profile

time="date"
current_time=$(eval $time)

## Create the e2e-result-custom-resources for the jobs
bash openebs-nativek8s/utils/pooling jobname:zfspv-provisioner
bash openebs-nativek8s/utils/e2e-cr jobname:zfs-ctrl-high-availability jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the litmusbook for scaling ZFS LocalPV controller
test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfs-controller-high-availability metadata="")
echo $test_name

# copy the content of run_litmus_test.yml into a temporary file to update the test specific parameters.
cd e2e-tests
cp experiments/zfs-localpv/functional/zfs-controller-high-availability/run_litmus_test.yml zfs_ctrl_HA.yml

cat zfs_ctrl_HA.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../openebs-nativek8s/utils/litmus_job_runner label='name:zfs-controller-high-availability' job=zfs_ctrl_HA.yml
## Get the cluster state Once the litmus jobs completed.
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfs-ctrl-high-availability $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################

rc_val=$(echo $?)

source ~/.profile
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-nativek8s/utils/e2e-cr jobname:zfs-ctrl-high-availability jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "run_job" ];then
  run_job $2 $3
else
  connect_cluster
fi

