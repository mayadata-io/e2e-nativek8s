#!/bin/bash

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $zfs_user@$zfs_ip -p $zfs_port -o LogLevel=ERROR 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/3-functional/3F01-zfspv-custom-topology-verify run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'

}

#########################################
#  Perform zfspv-custom-topology test   #
#########################################

run_job() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

## Pooling over the previous job to wait for its completion
bash openebs-nativek8s/utils/pooling jobname:zfs-volume-resize-xfs
bash openebs-nativek8s/utils/zfs-e2e-cr jobname:zfspv-custom-topology jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the litmusbook for performing zfspv-custom-topology support e2e-test
test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-custom-topology-test metadata="")
echo $test_name

# copy the content of provisioner run_e2e_test.yml into a temporary file to update the test specific parameters.
cd zfs-localpv/e2e-tests
cp experiments/functional/zfspv-custom-topology/run_e2e_test.yml run_custom_topology.yml

cat run_custom_topology.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../../openebs-nativek8s/utils/e2e_job_runner label='test:zfspv-custom-topology' job=run_custom_topology.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../openebs-nativek8s/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-custom-topology $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################

rc_val=$(echo $?)

source ~/.profile
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-nativek8s/utils/zfs-e2e-cr jobname:zfspv-custom-topology jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:$testResult
#python3 openebs-nativek8s/utils/result/result_update.py $job_id 3F01 3-functional "verify the zfspv-custom-topology support" $testResult $pipeline_id "$current_time" $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "run_job" ];then
  run_job $2 $3 $4
else
  connect_cluster
fi

