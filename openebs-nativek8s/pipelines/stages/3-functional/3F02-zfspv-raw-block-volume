#!/bin/bash

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port -o LogLevel=ERROR 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/3-functional/3F02-zfspv-raw-block-volume run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'

}

############################################
#  Perform zfspv-raw-block-volume e2e-test #
############################################

run_job() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

## Create the e2e-result-custom-resources for the jobs

bash openebs-nativek8s/utils/pooling jobname:zfspv-custom-topology
bash openebs-nativek8s/utils/e2e-cr jobname:zfspv-raw-block-volume jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the litmusbook for performing zfspv-raw-block-volume test
test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-raw-block-volume metadata="")
echo $test_name

# copy the content of provisioner run_litmus_test.yml into a temporary file to update the test specific parameters.
cd e2e-tests
cp experiments/zfs-localpv/functional/zfspv-raw-block-volume/run_litmus_test.yml run_raw_block_vol.yml

# Modify test specific values in runner file using sed command
sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: block-vol/g}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: zfs-sc-raw-block/g}' \
-e '/name: PVC_SIZE/{n;s/.*/            value: 5Gi/g}' \
-e '/name: OPERATOR_NAMESPACE/{n;s/.*/            value: openebs/g}' run_raw_block_vol.yml

cat run_raw_block_vol.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../openebs-nativek8s/utils/litmus_job_runner label='name:zfspv-block-volume' job=run_raw_block_vol.yml
## Get the cluster state Once the litmus jobs completed.
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-raw-block-volume $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################

rc_val=$(echo $?)

source ~/.profile
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-nativek8s/utils/e2e-cr jobname:zfspv-raw-block-volume jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:$testResult
python3 e2e-nativek8s/openebs-nativek8s/utils/result/result_update.py $job_id 3F01 3-functional "verify the zfspv-raw-block-volume support" $testResult $pipeline_id $current_time $commit_id $gittoken

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "run_job" ];then
  run_job $2 $3 $4
else
  connect_cluster
fi
