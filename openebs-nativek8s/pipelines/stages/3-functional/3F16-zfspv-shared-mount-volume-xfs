#!/bin/bash

## Define and initialize test-result specific variables.
zfspv_shared_mount_xfs_rc_val=1
zfspv_shared_mount_snapshot_xfs_rc_val=1
zfspv_shared_mount_clone_xfs_rc_val=1
zfspv_shared_mount_clone_xfs_deprovision_rc_val=1
zfspv_shared_mount_snapshot_xfs_deprovision_rc_val=1

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $zfs_user@$zfs_ip -p $zfs_port -o LogLevel=ERROR 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/3-functional/3F16-zfspv-shared-mount-volume-xfs run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$ZFS_OPERATOR_NAMESPACE'"'

}

#######################################################
# Perfom zfspv shared mount test with xfs file-system #
#######################################################

zfspv_shared_mount_xfs() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
zfs_operator_namespace=$(echo $4)
source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

## Pooling over the previous job to wait for its completion
bash openebs-nativek8s/utils/pooling jobname:zfspv-custom-topology
bash openebs-nativek8s/utils/zfs-e2e-cr jobname:zfspv-shared-mount-volume-xfs jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for performing the test for zfspv shared mount
run_id="xfs";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-shared-mount metadata=${run_id})
echo $test_name
cd zfs-localpv/e2e-tests

# copy the content of run_e2e_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfspv-shared-mount/run_e2e_test.yml zfspv_shared_mount_xfs.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/test: shared-mount-volume/test: shared-mount-volume-xfs/g' \
-e 's/generateName: zfspv-shared-mount-/generateName: shared-mount-zfspv-xfs-/g' \
-e 's/name: zfspv-shared-mount/name: zfspv-shared-mount-xfs/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: shared-xfs/}' \
-e '/name: APP_PVC/{n;s/.*/            value: shared-pvc-xfs/}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: zfspv-shared/}' \
-e "/name: ZFS_OPERATOR_NAMESPACE/{n;s/.*/            value: ${zfs_operator_namespace}/}" \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: busybox/}' \
-e '/name: ACTION/{n;s/.*/            value: provision/}' zfspv_shared_mount_xfs.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfspv_shared_mount_xfs.yml

sed -i '/parameters.yml: |/a \
    blocksize: 4k\
    blockcount: 1024\
    testfile: shared_mount_file
' zfspv_shared_mount_xfs.yml

cat zfspv_shared_mount_xfs.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../../openebs-nativek8s/utils/e2e_job_runner label='test:shared-mount-volume-xfs' job=zfspv_shared_mount_xfs.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../openebs-nativek8s/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-shared-mount-volume-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfspv_shared_mount_xfs_rc_val=$(echo $?)
if [ "$zfspv_shared_mount_xfs_rc_val" != "0" ]; then
exit 1;
fi

}

###################################
# Volume snapshot for shared zfspv#
###################################

zfspv_shared_mount_snapshot_xfs() {

## Generate test name for running litmusbook for generate load on application
run_id="shared-xfs";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-snapshot metadata=${run_id})
echo $test_name
cd zfs-localpv/e2e-tests

# copy the content of workload run_e2e_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfspv-snapshot/run_e2e_test.yml zfspv_shared_mount_snapshot_xfs.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/generateName: zfspv-snapshot-/generateName: snapshot-zfspv-shared-xfs/g' \
-e 's/name: zfspv-snapshot-clone/name: snap-clone-shared-xfs/g' \
-e 's/test: zfspv-snapshot/test: snapshot-shared-mount-xfs/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: shared-xfs/}' \
-e "/name: ZFS_OPERATOR_NAMESPACE/{n;s/.*/            value: ${zfs_operator_namespace}/}" \
-e '/name: SNAPSHOT_CLASS/{n;s/.*/            value: zfs-snapshot-class/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: shared-mount-snapshot-xfs/}' \
-e '/name: APP_PVC/{n;s/.*/            value: shared-pvc-xfs/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: name=previous-pod/}' zfspv_shared_mount_snapshot_xfs.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfspv_shared_mount_snapshot_xfs.yml

cat zfspv_shared_mount_snapshot_xfs.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../../openebs-nativek8s/utils/e2e_job_runner label='test:snapshot-shared-mount-xfs' job=zfspv_shared_mount_snapshot_xfs.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../openebs-nativek8s/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-shared-mount-volume-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfspv_shared_mount_snapshot_xfs_rc_val=$(echo $?)
if [ "$zfspv_shared_mount_snapshot_xfs_rc_val" != "0" ]; then
exit 1;
fi

}

###########################################
#  zfspv-clone for shared-volume snapshot #
###########################################

zfspv_shared_mount_clone_xfs() { 
  
## Generate test name for running litmusbook for creating zfspv snapshot
run_id="shared-xfs";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-clone metadata=${run_id})
echo $test_name
cd zfs-localpv/e2e-tests

# copy the content of run_e2e_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfspv-clone/run_e2e_test.yml zfspv_shared_mount_clone_xfs.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/generateName: zfspv-clone-/generateName: clone-zfspv-shared-xfs/g' \
-e 's/test: zfspv-clone/test: clone-zfspv-shared-xfs/g' \
-e 's/name: zfspv-snapshot-clone/name: snap-clone-shared-xfs/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: shared-xfs/}' \
-e "/name: ZFS_OPERATOR_NAMESPACE/{n;s/.*/            value: ${zfs_operator_namespace}/}" \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: zfspv-shared/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: shared-mount-snapshot-xfs/}' \
-e '/name: CLONE_PVC_NAME/{n;s/.*/            value: clone-shared-pvc/}' \
-e '/name: APP_NAME/{n;s/.*/            value: busybox/}' zfspv_shared_mount_clone_xfs.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfspv_shared_mount_clone_xfs.yml

cat zfspv_shared_mount_clone_xfs.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../../openebs-nativek8s/utils/e2e_job_runner label='test:clone-zfspv-shared-xfs' job=zfspv_shared_mount_clone_xfs.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../openebs-nativek8s/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-shared-mount-volume-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfspv_shared_mount_clone_xfs_rc_val=$(echo $?)
if [ "$zfspv_shared_mount_clone_xfs_rc_val" != "0" ]; then
exit 1;
fi

}

###########################
# Deprovision zfspv-clone #
###########################

zfspv_shared_mount_clone_xfs_deprovision() {

## Generate test name to run litmusbook for deprovisioning the zfspv clone
run_id="shared-xfs-deprovision";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-clone metadata=${run_id})
echo $test_name
cd zfs-localpv/e2e-tests

# copy the content of run_e2e_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfspv-clone/run_e2e_test.yml zfspv_shared_mount_clone_xfs_deprovision.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/generateName: zfspv-clone-/generateName: zfspv-clone-shared-xfs-deprovision-/g' \
-e '/labels:/{n;s/  test: zfspv-clone/  test: zfspv-clone-shared-xfs-deprovision/g}' \
-e 's/name: zfspv-snapshot-clone/name: snap-clone-shared-xfs/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: shared-xfs/}' \
-e '/name: ZFS_OPERATOR_NAMESPACE/{n;s/.*/            value: ${zfs_operator_namespace}/}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: zfspv-shared/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: shared-mount-snapshot-xfs/}' \
-e '/name: CLONE_PVC_NAME/{n;s/.*/            value: clone-shared-pvc/}' \
-e '/name: CLONE_PVC_SIZE/{n;s/.*/            value: 4Gi/}' \
-e '/name: APP_NAME/{n;s/.*/            value: busybox/}' \
-e '/name: ACTION/{n;s/.*/            value: deprovision/}' zfspv_shared_mount_clone_xfs_deprovision.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfspv_shared_mount_clone_xfs_deprovision.yml

cat zfspv_shared_mount_clone_xfs_deprovision.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../../openebs-nativek8s/utils/e2e_job_runner label='test:zfspv-clone-shared-xfs-deprovision' job=zfspv_shared_mount_clone_xfs_deprovision.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../openebs-nativek8s/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-shared-mount-volume-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfspv_shared_mount_clone_xfs_deprovision_rc_val=$(echo $?)
if [ "$zfspv_shared_mount_clone_xfs_deprovision_rc_val" != "0" ]; then
exit 1;
fi

}

###########################
# Deprovision zfspv-snapshot #
###########################

zfspv_shared_mount_snapshot_xfs_deprovision() {

## Generate test name to run litmusbook for deprovisioning the zfspv-snapshot
run_id="shared-xfs-deprovision";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-snapshot metadata=${run_id})
echo $test_name
cd zfs-localpv/e2e-tests

# copy the content of provisioner run_e2e_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfspv-snapshot/run_e2e_test.yml zfspv_shared_mount_snapshot_xfs_deprovision.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/generateName: zfspv-snapshot-/generateName: zfspv-snapshot-shared-xfs-deprovision-/g' \
-e '/labels:/{n;s/  test: zfspv-snapshot/  test: zfspv-snapshot-shared-xfs-deprovision/g}' \
-e 's/name: zfspv-snapshot-clone/name: snap-clone-shared-xfs/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: shared-xfs/}' \
-e '/name: ZFS_OPERATOR_NAMESPACE/{n;s/.*/            value: ${zfs_operator_namespace}/}' \
-e '/name: SNAPSHOT_CLASS/{n;s/.*/            value: xfs-snapshot-class/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: shared-mount-snapshot-xfs/}' \
-e '/name: APP_PVC/{n;s/.*/            value: shared-pvc-xfs/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: name=previous-pod/}' \
-e '/name: ACTION/{n;s/.*/            value: deprovision/}' zfspv_shared_mount_snapshot_xfs_deprovision.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfspv_shared_mount_snapshot_xfs_deprovision.yml

cat zfspv_shared_mount_snapshot_xfs_deprovision.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../../openebs-nativek8s/utils/e2e_job_runner label='test:zfspv-snapshot-shared-xfs-deprovision' job=zfspv_shared_mount_snapshot_xfs_deprovision.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../openebs-nativek8s/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-shared-mount-volume-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfspv_shared_mount_snapshot_xfs_deprovision_rc_val=$(echo $?)
if [ "$zfspv_shared_mount_snapshot_xfs_deprovision_rc_val" != "0" ]; then
exit 1;
fi

}


##################################
# Deprovision zfspv-shared-mount #
##################################

zfspv_shared_mount_xfs_deprovision() {

## Generate test name to run litmusbook for deprovisioning the zfspv-snapshot
run_id="xfs-deprovision";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-shared-mount metadata=${run_id})
echo $test_name
cd zfs-localpv/e2e-tests

# copy the content of run_e2e_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfspv-shared-mount/run_e2e_test.yml zfspv_shared_mount_xfs_deprovision.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/test: shared-mount-volume/test: shared-mount-volume-xfs-deprovision/g' \
-e 's/generateName: zfspv-shared-mount-/generateName: shared-mount-zfspv-xfs-deprovision-/g' \
-e 's/name: zfspv-shared-mount/name: zfspv-shared-mount-xfs/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: shared-xfs/}' \
-e '/name: APP_PVC/{n;s/.*/            value: shared-pvc-xfs/}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: zfspv-xfs-shared/}' \
-e '/name: OPERATOR_NAMESPACE/{n;s/.*/            value: openebs/}' \
-e '/name: ACTION/{n;s/.*/            value: deprovision/}' zfspv_shared_mount_xfs_deprovision.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfspv_shared_mount_xfs_deprovision.yml

cat zfspv_shared_mount_xfs_deprovision.yml

## Run the Litmus job and get the details of the litmus job from litmus_job_runner utils.
bash ../../openebs-nativek8s/utils/e2e_job_runner label='test:shared-mount-volume-xfs-deprovision' job=zfspv_shared_mount_xfs_deprovision.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../openebs-nativek8s/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash openebs-nativek8s/utils/event_updater jobname:zfspv-shared-mount-volume-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfspv_shared_mount_xfs_deprovision_rc_val=$(echo $?)

if [ "$zfspv_shared_mount_xfs_deprovision_rc_val" -eq "0" ] &&
   [ "$zfspv_shared_mount_snapshot_xfs_deprovision_rc_val" -eq "0" ] &&
   [ "$zfspv_shared_mount_clone_xfs_deprovision_rc_val" -eq "0" ] &&
   [ "$zfspv_shared_mount_clone_xfs_rc_val" -eq "0" ] &&
   [ "$zfspv_shared_mount_snapshot_xfs_rc_val" -eq "0" ] &&
   [ "$zfspv_shared_mount_xfs_rc_val" -eq "0" ]; then

## Update the e2e-result-custom-resources for the job
bash openebs-nativek8s/utils/zfs-e2e-cr jobname:zfspv-shared-mount-volume-xfs jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass
#python3 openebs-nativek8s/utils/result/result_update.py $job_id 3F16 3-functional "zfspv shared mount volume support when fstype is xfs" Pass $pipeline_id "$current_time" $commit_id $gittoken

else
## Update the e2e-result-custom-resources for the job
bash openebs-nativek8s/utils/zfs-e2e-cr jobname:zfspv-shared-mount-volume-xfs jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Fail
#python3 openebs-nativek8s/utils/result/result_update.py $job_id 3F16 3-functional "zfspv shared mount volume support when fstype is xfs" Fail $pipeline_id "$current_time" $commit_id $gittoken
exit 1;
fi

}


if [ "$1" == "run_job" ];then
  zfspv_shared_mount_xfs $2 $3 $4 $5
  zfspv_shared_mount_snapshot_xfs
  zfspv_shared_mount_clone_xfs
  zfspv_shared_mount_clone_xfs_deprovision
  zfspv_shared_mount_snapshot_xfs_deprovision
  zfspv_shared_mount_xfs_deprovision

else
  connect_cluster
fi