#!/bin/bash

zfs_clone_rc_val=1
zfs_clone_deprovision_rc_val=1
zfs_snap_deprovision_rc_val=1

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/3-functional/ZFSPV-clone/ZFSPV-clone node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'

}

####################
# create zfs-clone #
####################

zfs_clone() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile

time="date"
current_time=$(eval $time)

## Pooling over the previous job to wait for its completion
bash openebs-nativek8s/utils/pooling jobname:s3-j3-zfspv-snapshot
bash openebs-nativek8s/utils/e2e-cr jobname:s3-j4-zfspv-clone jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

## Creating clone for the snapshot created in the previous job
test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-clone metadata="")
echo $test_name
cd litmus

# copy the content of run_litmus_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfs-LocalPV/zfspv-clone/run_litmus_test.yml zfs_clone_test.yml

# Modify test specific values in runner file using sed command
sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: percona-zfs-snap/}' \
-e '/name: OPERATOR_NAMESPACE/{n;s/.*/            value: openebs/}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: zfs-sc/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: zfs-snapshot/}' \
-e '/name: CLONED_PVC_NAME/{n;s/.*/            value: clone-pvc/}' \
-e '/name: CLONE_PVC_SIZE/{n;s/.*/            value: 5Gi/}' \
-e '/name: APP_NAME/{n;s/.*/            value: percona/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: percona-clone/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/}' zfs_clone_test.yml

cat zfs_clone_test.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='name:zfspv-clone' job=zfs_clone_test.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s3-j4-zfspv-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfs_clone_rc_val=$(echo $?)

if [ "$zfs_clone_rc_val" != "0" ]; then
zfs_snap_deprovision
app_deprovision
fi

}

#########################
# Deprovision zfs-clone #
#########################

zfs_clone_deprovision() {

run_id="deprovision";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-clone metadata=${run_id})
echo $test_name
cd litmus

# copy the content of run_litmus_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfs-LocalPV/zfspv-clone/run_litmus_test.yml zfs_clone_deprovision.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/generateName: zfspv-clone-/generateName: zfspv-clone-deprovision-/g' \
-e '/labels:/{n;s/  name: zfspv-clone/  name: zfspv-clone-deprovision/g}' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: percona-zfs-snap/}' \
-e '/name: OPERATOR_NAMESPACE/{n;s/.*/            value: openebs/}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: zfs-sc/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: zfs-snapshot/}' \
-e '/name: CLONED_PVC_NAME/{n;s/.*/            value: clone-pvc/}' \
-e '/name: CLONE_PVC_SIZE/{n;s/.*/            value: 5Gi/}' \
-e '/name: APP_NAME/{n;s/.*/            value: percona/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: percona-clone/}' \
-e '/name: ACTION/{n;s/.*/            value: deprovision/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/}' zfs_clone_deprovision.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfs_clone_deprovision.yml

cat zfs_clone_deprovision.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='name:zfspv-clone-deprovision' job=zfs_clone_deprovision.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s3-j4-zfspv-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfs_clone_deprovision_rc_val=$(echo $?)

if [ "$zfs_clone_deprovision_rc_val" != "0" ]; then
zfs_snap_deprovision
app_deprovision
fi

}

############################
# Deprovision zfs-snapshot #
############################

zfs_snap_deprovision() {

run_id="deprovision";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-snapshot metadata=${run_id})
echo $test_name
cd litmus

# copy the content of provisioner run_litmus_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfs-LocalPV/zfspv-snapshot/run_litmus_test.yml zfs_snap_deprovision.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/generateName: zfspv-snapshot-/generateName: zfspv-snapshot-deprovision-/g' \
-e '/labels:/{n;s/  name: zfspv-snapshot/  name: zfspv-snapshot-deprovision/g}' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: percona-zfs-snap/}' \
-e '/name: OPERATOR_NAMESPACE/{n;s/.*/            value: openebs/}' \
-e '/name: SNAPSHOT_CLASS/{n;s/.*/            value: zfs-snapshot-class/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: zfs-snapshot/}' \
-e '/name: APP_PVC/{n;s/.*/            value: percona-mysql-claim/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: name=percona/}' \
-e '/name: ACTION/{n;s/.*/            value: deprovision/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/}' zfs_snap_deprovision.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zfs_snap_deprovision.yml

cat zfs_snap_deprovision.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='name:zfspv-snapshot-deprovision' job=zfs_snap_deprovision.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s3-j4-zfspv-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zfs_snap_deprovision_rc_val=$(echo $?)

if [ "$zfs_snap_deprovision_rc_val" != "0" ]; then
app_deprovision
fi

}

##########################
# Deprovision Application#
##########################

app_deprovision() {
  
run_id="snap-deprovision";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=percona-deployment metadata=${run_id})
echo $test_name
cd litmus

# copy the content of run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/percona/deployers/run_litmus_test.yml percona_deprovision.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/app: percona-deployment/app: deprovision-percona-zfs-snap/g' \
-e 's/generateName: litmus-percona-/generateName: litmus-percona-zfssnap-deprovision-/g' \
-e 's/value: openebs-standard/value: zfs-sc/g' \
-e 's/value: provision/value: deprovision/g' \
-e '/name: TARGET_AFFINITY_CHECK/{n;s/value: enable/value: disable/g}' \
-e 's/value: app-percona-ns/value: percona-zfs-snap/g' percona_deprovision.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' percona_deprovision.yml

cat percona_deprovision.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='app:deprovision-percona-zfs-snap' job=percona_deprovision.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s3-j4-zfspv-clone $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deprovision_rc_val=$(echo $?)

if [ "$app_deprovision_rc_val" -eq "0" ] &&
   [ "$zfs_snap_deprovision_rc_val" -eq "0" ] &&
   [ "$zfs_clone_deprovision_rc_val" -eq "0" ] &&
   [ "$zfs_clone_rc_val" -eq "0" ]; then

bash openebs-nativek8s/utils/e2e-cr jobname:s3-j4-zfspv-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Pass
exit 1;

fi

if [ "$app_deprovision_rc_val" != "0" ]; then
bash openebs-nativek8s/utils/e2e-cr jobname:s3-j4-zfspv-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
else
bash openebs-nativek8s/utils/e2e-cr jobname:s3-j4-zfspv-clone jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:Fail
exit 1;
fi

}


if [ "$1" == "node" ];then
  zfs_clone $2 $3 $4 $5
  zfs_clone_deprovision
  zfs_snap_deprovision
  app_deprovision
else
  pod
fi