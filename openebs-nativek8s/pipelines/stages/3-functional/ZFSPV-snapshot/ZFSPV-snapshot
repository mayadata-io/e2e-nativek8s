#!/bin/bash

pod() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-nativek8s && bash openebs-nativek8s/pipelines/stages/3-functional/ZFSPV-snapshot/ZFSPV-snapshot node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$RELEASE_TAG'"'

}

node() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
releaseTag=$(echo $4)
source ~/.profile

time="date"
current_time=$(eval $time)

## Pooling over the previous job to wait for its completion
bash openebs-nativek8s/utils/pooling jobname:s3-j1-zfspv-provisioner
bash openebs-nativek8s/utils/e2e-cr jobname:s3-j3-zfspv-snapshot jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag"

######################
# Deploy Application #
######################

## Deploying percona application using zfs volume

run_id="zfs-snap";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=percona-deployment metadata=${run_id})
echo $test_name
cd litmus

# copy the content of deployers run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/percona/deployers/run_litmus_test.yml deploy_percona_zfssnap.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/app: percona-deployment/app: deploy-percona-zfs-snap/g' \
-e 's/generateName: litmus-percona-/generateName: litmus-percona-zfssnap-/g' \
-e 's/value: openebs-standard/value: zfs-sc/g' \
-e '/name: TARGET_AFFINITY_CHECK/{n;s/value: enable/value: disable/g}' \
-e 's/value: app-percona-ns/value: percona-zfs-snap/g' deploy_percona_zfssnap.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' deploy_percona_zfssnap.yml

cat deploy_percona_zfssnap.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='app:deploy-percona-zfs-snap' job=deploy_percona_zfssnap.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s3-j3-zfspv-snapshot $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

################
#   LoadGen    #
################

## Load generation on the percona application

run_id="zfs-snap";test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=percona-loadgen metadata=${run_id})
echo $test_name
cd litmus

# copy the content of workload run_litmus_test.yml into a different file to update the test specific parameters.
cp apps/percona/workload/run_litmus_test.yml loadgen_percona_zfssnap.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/loadgen: percona-loadjob/loadgen: percona-loadjob-zfs-snap/g' \
-e 's/generateName: percona-loadgen-/generateName: percona-loadgen-zfs-snap-/g' \
-e 's/value: app-percona-ns/value: percona-zfs-snap/g' loadgen_percona_zfssnap.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' loadgen_percona_zfssnap.yml

cat loadgen_percona_zfssnap.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='loadgen:percona-loadjob-zfs-snap' job=loadgen_percona_zfssnap.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s3-j3-zfspv-snapshot $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

#######################
# Create zfs-snapshot #
#######################

## Litmus experiment for creating zfspv snapshot

test_name=$(bash openebs-nativek8s/utils/generate_test_name testcase=zfspv-snapshot metadata="")
echo $test_name
cd litmus

# copy the content of run_litmus_test.yml into a different file to update the test specific parameters.
cp experiments/functional/zfs-LocalPV/zfspv-snapshot/run_litmus_test.yml zfs_snap_test.yml

# Modify test specific values in runner file using sed command
sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: percona-zfs-snap/}' \
-e '/name: OPERATOR_NAMESPACE/{n;s/.*/            value: openebs/}' \
-e '/name: SNAPSHOT_CLASS/{n;s/.*/            value: zfs-snapshot-class/}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: zfs-snapshot/}' \
-e '/name: APP_PVC/{n;s/.*/            value: percona-mysql-claim/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: name=percona/}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/}' zfs_snap_test.yml

sed -i '/parameters.yml: |/a \
    dbuser: root\
    dbpassword: k8sDem0\
    dbname: zfs_snap
' zfs_snap_test.yml

cat zfs_snap_test.yml

bash ../openebs-nativek8s/utils/litmus_job_runner label='name:zfspv-snapshot' job=zfs_snap_test.yml
bash ../openebs-nativek8s/utils/dump_cluster_state;
cd ..
bash openebs-nativek8s/utils/event_updater jobname:s3-j3-zfspv-snapshot $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

#################
## GET RESULT  ##
#################

rc_val=$(echo $?)

source ~/.profile
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash openebs-nativek8s/utils/e2e-cr jobname:s3-j3-zfspv-snapshot jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "node" ];then
  node $2 $3 $4 $5
else
  pod
fi