#!/bin/bash
set -x

job_name=$(echo $1 | cut -d ":" -f 2)
job_phase=$(echo $2 | cut -d ":" -f 2)
time_phase=$(echo $3 |cut -d ":" -f 1)
test_time=$(echo $3 | cut -d ":" -f2-)
job_id=$(echo $4 | cut -d ":" -f 2)
pipeline_id=$(echo $5 | cut -d ":" -f 2)
testcase_id=$(echo $6 | cut -d ":" -f 2)
openebs_version=$(echo $7 | cut -d ":" -f 2)
test_result=$(echo $8 | cut -d ":" -f2-)

echo "******Creating e2e-result-custom-resource********"

if [[ "${time_phase}" == "init_time" ]];then
  sed -i -e "s/<test-init>/$test_time/g" result-$job_name.yml;
elif [[ "${time_phase}" == "end_time" ]];then
  sed -i "s/<test-finish>/$test_time/g" result-$job_name.yml;
else 
  echo "**Time not specified***";
fi

# Update the job phase in resutl yaml
if [[ "${job_phase}" == "Waiting" ]];then
  cat openebs-konvoy-e2e/utils/e2e-result.yml > result-$job_name.yml
  sed -i -e "s/<test-phase>/$job_phase/g" result-$job_name.yml
elif [[ "${job_phase}" == "Running" ]];then
  sed -i -e "s/Waiting/$job_phase/g" result-$job_name.yml
else 
  sed -i -e "s/Running/$job_phase/g" result-$job_name.yml
fi

#update the test name in result yaml
sed -i -e "s/<test-name>/$job_name/g" result-$job_name.yml

#update the test result in result yaml
if [ ! -z "$test_result" ];then
  sed -i "s/<test-result>/$test_result/g" result-$job_name.yml
fi

# Update the openebs version in result yaml
if [ ! -z "$test_result" ];then
sed -i "s/<openebs-id>/$openebs_version/g" result-$job_name.yml
fi

# Update the gitlab job id in result yaml
if [ ! -z "$test_result" ];then
  sed -i "s/<job-id>/$job_id/g" result-$job_name.yml
fi

# Update the Gitlab pipeline id in result yaml
if [ ! -z "$test_result" ];then
  sed -i "s/<pipeline-id>/$pipeline_id/g" result-$job_name.yml
fi

# Update the test case id in result yaml
if [ ! -z "$test_result" ];then
  sed -i "s/<case-id>/$testcase_id/g" result-$job_name.yml
fi

cat result-$job_name.yml

kubectl apply -f result-$job_name.yml

#if [[ "${time_phase}" == "end_time" ]];then
#  rm result-$job_name.yml
#fi