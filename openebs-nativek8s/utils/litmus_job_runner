#!/bin/bash
set -x

litmus_job_label_key=$(echo $1 | cut -d "=" -f 2 | cut -d ":" -f 1)
litmus_job_label_value=$(echo $1 | cut -d "=" -f 2 | cut -d ":" -f 2)
litmus_job_file=$(echo $2 | cut -d "=" -f 2)

echo "Running the litmus test.."

jobNameCmd="kubectl get jobs -n litmus --no-headers -o jsonpath='{.items[?(@.metadata.labels.${litmus_job_label_key}==\"${litmus_job_label_value}\")].metadata.name}'"

job_deploy_out=$(kubectl create -f ${litmus_job_file}) && \
job_name=$(eval ${jobNameCmd}); retcode=$?

while [ -z "$job_name" ]; do
  sleep 5
  job_name=$(eval ${jobNameCmd});
done
chmod 755 ../openebs-konvoy-e2e/utils/error_handler
bash ../openebs-konvoy-e2e/utils/error_handler ${retcode} msg="Unable to run litmusbook, exiting" action="exit"

## Obtain the litmus pod name 

litmusPodCmd="kubectl get pod --no-headers -n litmus -o jsonpath='{.items[?(@.metadata.labels.job-name==\"${job_name}\")].metadata.name}'"
litmus_pod=$(eval ${litmusPodCmd}); retcode=$?
bash ../openebs-konvoy-e2e/utils/error_handler ${retcode} msg="Unable to find litmus test runner pod, exiting" action="exit"

## Wait till the ansibletest container terminates && also confirm job completion status. This is done to ensure
## that execution of auxiliary containers such as loggers is completed. Getting the ansibletest ccontainer to completed state 
## satisfies the "necessary" condition for test job completion

containerStateCmd="kubectl get pod ${litmus_pod} -n litmus -o jsonpath='{.status.containerStatuses[?(@.name==\"ansibletest\")].state}'"
jobStateCmd="kubectl get pod ${litmus_pod} --no-headers -n litmus -o custom-columns=:status.phase"

## TODO: Consider cases where litmus pod is evicted

while true; do
  cstate=$(eval ${containerStateCmd}); rc=$?
  if [[ $rc -eq 0 && ! $cstate ]]; then
    sleep 10
    else if [[ $rc -eq 0 && ! -z $cstate ]]; then
      if [[ ! $cstate =~ 'terminated' ]]; then
        sleep 10
      else break;
      fi
    else
      echo "unable to get litmus container status"; exit 1
    fi
  fi
done

while true; do
  jstate=$(eval ${jobStateCmd}); rc=$?
  if [[ $rc -eq 0 && ! -z $jstate ]]; then
    if [[ $jstate =~ 'Running' ]]; then
      sleep 10
    else break;
    fi
  else
    echo "unable to get litmus job status"; exit 1
  fi
done
echo "Litmus test run Job has completed"

echo "Dumping Litmus test pod logs for debug"; echo ""
kubectl logs $litmus_pod -n litmus -c ansibletest