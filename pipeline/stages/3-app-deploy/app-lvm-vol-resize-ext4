#!/bin/bash

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $lvm_user@$ip -i /root/.ssh/id_rsa -o LogLevel=ERROR 'cd e2e-nativek8s && bash pipeline/stages/3-app-deploy/app-lvm-vol-resize-ext4 run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'

}

#######################################
# Deploy percona application on lvmPV #
#######################################

app_deploy() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
source ~/.profile

time="date"
current_time=$(eval $time)

## Create the e2e-result-custom-resources for the jobs
bash pipeline/utils/lvm-e2e-cr jobname:app-lvm-vol-resize-ext4 jobphase:Waiting
bash pipeline/utils/lvm-e2e-cr jobname:app-lvm-vol-resize-ext4 jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the litmusbook for percona deployment
test_name=$(bash pipeline/utils/generate_test_name testcase=percona-provision-lvm-resize-ext4 metadata="")
echo $test_name

## copy the content of run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp apps/percona/deployers/run_e2e_test.yml percona_lvm_resize_ext4.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/app: percona-deployment/app: percona-deployment-lvm-resize-ext4/g' \
-e 's/generateName: percona-deploy-/generateName: percona-deploy-lvm-resize-ext4-/g' \
-e "s/value: 'percona'/value: 'lvm-resize-ext4'/g" percona_lvm_resize_ext4.yml

cat percona_lvm_resize_ext4.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:percona-deployment-lvm-resize-ext4' job=percona_lvm_resize_ext4.yml
## Get the cluster state once the e2e-test job completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:app-lvm-vol-resize-ext4 $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deploy_rc_val=$(echo $?)
if [ "$app_deploy_rc_val" != "0" ]; then
exit 1;

else
## Update the e2e-result-custom-resources for the job
bash pipeline/utils/lvm-e2e-cr jobname:app-lvm-vol-resize-ext4 jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass

fi

}

if [ "$1" == "run_job" ];then
  app_deploy $2 $3 $4

else
  connect_cluster
fi

