#!/bin/bash

## Define and initialize test-result specific variables.
app_deploy_rc_val=1
lvm_volume_resize_rc_val=1

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $lvm_user@$ip -p $port -o LogLevel=ERROR 'cd e2e-nativek8s && bash pipeline/stages/3-functional/3F01-lvm-volume-resize run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'

}

#######################################
# Deploy percona application on LVMPV #
#######################################

app_deploy() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)

time="date"
current_time=$(eval $time)

## Create the e2e-result-custom-resources for the jobs
bash pipeline/utils/lvm-e2e-cr jobname:lvm-volume-resize jobphase:Waiting
bash pipeline/utils/lvm-e2e-cr jobname:lvm-volume-resize jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the e2e-test for percona deployment
test_name=$(bash pipeline/utils/generate_test_name testcase=percona-provision-lvm-resize metadata="")
echo $test_name

## copy the content of provisioner run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp apps/percona/deployers/run_e2e_test.yml percona_lvm_resize.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/app: percona-deployment/app: percona-deployment-lvm-resize/g' \
-e 's/generateName: percona-deploy-/generateName: percona-deploy-lvm-resize-/g' \
-e "s/value: 'percona'/value: 'lvm-resize'/g" percona_lvm_resize.yml

cat percona_lvm_resize.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:percona-deployment-lvm-resize' job=percona_lvm_resize.yml
## Get the cluster state once the e2e-test job completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvm-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deploy_rc_val=$(echo $?)
if [ "$app_deploy_rc_val" != "0" ]; then
exit 1;
fi

}

#############################
#     LVM volume resize     #
#############################

lvm_volume_resize() {

## Generate the test name for running the e2e-test for lvm-volume resize
test_name=$(bash pipeline/utils/generate_test_name testcase=lvm-volume-resize metadata="")
echo $test_name

## copy the content of run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp experiments/functional/lvm-volume-resize/run_e2e_test.yml lvm_resize.yml

# Modify test specific values in runner file using sed command
sed -i -e '/name: APP_NAMESPACE/{n;s/.*/            value: lvm-resize/g}' \
-e '/name: APP_PVC/{n;s/.*/            value: percona-pvc/g}' \
-e '/name: APP_LABEL/{n;s/.*/            value: app=percona/g}' \
-e '/name: STORAGE_CLASS/{n;s/.*/            value: openebs-lvmsc/g}' \
-e '/name: OLD_PV_CAPACITY/{n;s/.*/            value: 5Gi/g}' \
-e '/name: NEW_PV_CAPACITY/{n;s/.*/            value: 10Gi/g}' lvm_resize.yml

cat lvm_resize.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:lvm-volume-resize' job=lvm_resize.yml
## Get the cluster state once the e2e job completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvm-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

lvm_volume_resize_rc_val=$(echo $?)
if [ "$lvm_volume_resize_rc_val" != "0" ]; then
exit 1;
fi

}

#######################################
#   Deprovision percona application   #
#######################################

app_deprovision() {

## Generate test name for running e2e-test for deprovision the percona application
test_name=$(bash pipeline/utils/generate_test_name testcase=percona-deprovision-lvm-resize metadata="")
echo $test_name

# copy the content of run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp apps/percona/deployers/run_e2e_test.yml percona_dep_lvm_resize.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/app: percona-deployment/app: percona-deprovision-lvm-resize/g' \
-e 's/generateName: percona-deploy-/generateName: percona-deprovision-lvm-resize-/g' \
-e "s/value: 'provision'/value: 'deprovision'/g" \
-e "s/value: 'percona'/value: 'lvm-resize'/g" percona_dep_lvm_resize.yml       

cat percona_dep_lvm_resize.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:percona-deprovision-lvm-resize' job=percona_dep_lvm_resize.yml
cd ../..
## Get the cluster state once the e2e-test job completed.
bash pipeline/utils/dump_cluster_state;
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvm-volume-resize $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deprovision_rc_val=$(echo $?)

if [ "$app_deprovision_rc_val" -eq "0" ] &&
   [ "$lvm_volume_resize_rc_val" -eq "0" ] &&
   [ "$app_deploy_rc_val" -eq "0" ]; then

## Update the e2e-result-custom-resources for the job
bash pipeline/utils/lvm-e2e-cr jobname:lvm-volume-resize jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass

else
## Update the e2e-result-custom-resources for the job
bash pipeline/utils/lvm-e2e-cr jobname:lvm-volume-resize jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Fail
exit 1;
fi

}

if [ "$1" == "run_job" ];then
  app_deploy $2 $3 $4
  lvm_volume_resize
  app_deprovision
else
  connect_cluster
fi