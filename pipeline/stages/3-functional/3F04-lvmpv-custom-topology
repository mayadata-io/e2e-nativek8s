#!/bin/bash

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $lvm_user@$ip -p $port -o LogLevel=ERROR 'cd e2e-nativek8s && bash pipeline/stages/3-functional/3F04-lvmpv-custom-topology run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'

}

#########################################
#  Perform lvmpv-custom-topology test   #
#########################################

run_job() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)

source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

## Pooling over the previous job to wait for its completion
bash pipeline/utils/pooling jobname:lvm-volume-resize-xfs
bash pipeline/utils/lvm-e2e-cr jobname:lvmpv-custom-topology jobphase:Waiting
bash pipeline/utils/lvm-e2e-cr jobname:lvmpv-custom-topology jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the e2e-test for performing lvmpv-custom-topology support test
test_name=$(bash pipeline/utils/generate_test_name testcase=lvmpv-custom-topology-test metadata="")
echo $test_name

# copy the content of run_e2e_test.yml file into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp experiments/functional/lvmpv-custom-topology/run_e2e_test.yml run_custom_topology.yml

cat run_custom_topology.yml

## Run the Litmus job and get the details of the litmus job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='name:lvmpv-custom-topology' job=run_custom_topology.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvmpv-custom-topology $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

#################
## GET RESULT  ##
#################

rc_val=$(echo $?)

source ~/.profile
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash pipeline/utils/lvm-e2e-cr jobname:lvmpv-custom-topology jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
}

if [ "$1" == "run_job" ];then
  run_job $2 $3 $4
else
  connect_cluster
fi
