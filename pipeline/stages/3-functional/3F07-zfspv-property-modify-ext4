#!/bin/bash

## Define and initialize test-result specific variables.
app_deploy_rc_val=1
zv_property_modify_rc_val=1

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
mkdir -p /root/.ssh
touch /root/.ssh/id_rsa
echo "$SSH_KEYS" > /root/.ssh/id_rsa
chmod 600 /root/.ssh/id_rsa
ssh -o StrictHostKeyChecking=no $zfs_user@$zfs_ip -i /root/.ssh/id_rsa -o LogLevel=ERROR 'cd e2e-nativek8s && bash pipeline/stages/3-functional/3F07-zfspv-property-modify-ext4 run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$ZFS_OPERATOR_NAMESPACE'"'

}

#######################################
# Deploy percona application on ZFSPV #
#######################################

app_deploy() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
zfs_operator_namespace=$(echo $4)
source ~/.profile
gittoken=$(echo "$github_token")

time="date"
current_time=$(eval $time)

## Pooling over the previous job to wait for its completion
bash pipeline/utils/pooling jobname:zfspv-custom-topology
bash pipeline/utils/zfs-e2e-cr jobname:zfspv-property-modify-ext4 jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the litmusbook for percona deployment
test_name=$(bash pipeline/utils/generate_test_name testcase=percona-provision-ext4-property-modify metadata='')
echo $test_name

## copy the content of provisioner run_e2e_test.yml into a temporary file to update the test specific parameters.
cd zfs-localpv/e2e-tests
cp apps/percona/deployers/run_e2e_test.yml percona_deploy_ext4_property_modify.yml

# Modify test specific values in runner file using sed command
sed -i -e "/name: APP_NAMESPACE/{n;s/value: 'percona'/value: 'ext4-property-modify'/g}" \
-e 's/generateName: percona-deploy-/generateName: percona-provision-ext4-property-modify-/g' \
-e "/name: STORAGE_CLASS/{n;s/value: 'zfspv-sc'/value: 'zfspv-sc-ext4'/g}" \
-e 's/app: percona-deployment/app: percona-deployment-zfs-property-modify/g' percona_deploy_ext4_property_modify.yml

cat percona_deploy_ext4_property_modify.yml

## Run the Litmus job and get the details of the litmus job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:percona-deployment-zfs-property-modify' job=percona_deploy_ext4_property_modify.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:zfspv-property-modify-ext4 $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deploy_rc_val=$(echo $?)
if [ "$app_deploy_rc_val" != "0" ]; then
exit 1;
fi

}

######################
# ZV property modify #
######################

zv_property_modify() {

## Generate the test name for running the litmusbook for percona deployment
run_id="ext4";test_name=$(bash pipeline/utils/generate_test_name testcase=zv-property-runtime-modify metadata=${run_id})
echo $test_name

## copy the content of provisioner run_e2e_test.yml into a temporary file to update the test specific parameters.
cd zfs-localpv/e2e-tests
cp experiments/functional/zv-property-runtime-modify/run_e2e_test.yml zv_property_runtime_modify_ext4.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/generateName: zv-property-runtime-modify-/generateName: ext4-zv-property-runtime-modify-/g' \
-e 's/test: zv-property-runtime-modify/test: ext4-zv-property-runtime-modify/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: ext4-property-modify/}' \
-e '/name: APP_LABEL/{n;s/.*/            value: app=percona/}' \
-e '/name: FILE_SYSTEM_TYPE/{n;s/.*/            value: ext4/}' \
-e "/name: ZFS_OPERATOR_NAMESPACE/{n;s/.*/            value: ${zfs_operator_namespace}/}" \
-e '/name: APP_PVC/{n;s/.*/            value: percona-pvc/}' \
-e '/name: NEW_COMPRESSION_PARAMETER/{n;s/.*/            value: "on"/}' \
-e '/name: NEW_DEDUP_PARAMETER/{n;s/.*/            value: "on"/}' \
-e '/name: ZPOOL_NAME/{n;s/.*/            value: zfs-test-pool/}' zv_property_runtime_modify_ext4.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' zv_property_runtime_modify_ext4.yml

cat zv_property_runtime_modify_ext4.yml

## Run the Litmus job and get the details of the litmus job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='test:ext4-zv-property-runtime-modify' job=zv_property_runtime_modify_ext4.yml
## Get the cluster state Once the litmus jobs completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:zfspv-property-modify-ext4 $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

zv_property_modify_rc_val=$(echo $?)
if [ "$zv_property_modify_rc_val" != "0" ]; then
exit 1;
fi

}

#######################################
#   Deprovision percona application   #
#######################################

app_deprovision() {

## Generate test name for running litmusbook for generate load on application
test_name=$(bash pipeline/utils/generate_test_name testcase=percona-deprovision-ext4-property-modify metadata='')
echo $test_name

# copy the content of workload run_e2e_test.yml into a temporary file to update the test specific parameters.
cd zfs-localpv/e2e-tests
cp apps/percona/deployers/run_e2e_test.yml percona_deprovision_ext4_property_modify.yml

# Modify test specific values in runner file using sed command
sed -i -e "/name: APP_NAMESPACE/{n;s/value: 'percona'/value: 'ext4-property-modify'/g}" \
-e 's/app: percona-deployment/app: percona-deprovision-ext4-property-modify/g' \
-e 's/generateName: percona-deploy-/generateName: percona-deprovision-ext4-property-modify-/g' \
-e "s/value: 'provision'/value: 'deprovision'/g" percona_deprovision_ext4_property_modify.yml
    
cat percona_deprovision_ext4_property_modify.yml

## Run the Litmus job and get the details of the litmus job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:percona-deprovision-ext4-property-modify' job=percona_deprovision_ext4_property_modify.yml
cd ../..
## Get the cluster state Once the litmus jobs completed.
bash pipeline/utils/dump_cluster_state;
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:zfspv-property-modify-ext4 $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deprovision_rc_val=$(echo $?)

if [ "$app_deprovision_rc_val" -eq "0" ] &&
   [ "$zv_property_modify_rc_val" -eq "0" ] &&
   [ "$app_deploy_rc_val" -eq "0" ]; then

## Update the e2e-result-custom-resources for the job
bash pipeline/utils/zfs-e2e-cr jobname:zfspv-property-modify-ext4 jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass
#python3 openebs-nativek8s/utils/result/result_update.py $job_id 3F07 3-functional "zfspv property runtime modification when fstype is ext4" Pass $pipeline_id "$current_time" $commit_id $gittoken

else
## Update the e2e-result-custom-resources for the job
bash pipeline/utils/zfs-e2e-cr jobname:zfspv-property-modify-ext4 jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Fail
#python3 openebs-nativek8s/utils/result/result_update.py $job_id 3F07 3-functional "zfspv property runtime modification when fstype is ext4" Fail $pipeline_id "$current_time" $commit_id $gittoken

exit 1;
fi

}

if [ "$1" == "run_job" ];then
  app_deploy $2 $3 $4 $5
  zv_property_modify
  app_deprovision
else
  connect_cluster
fi