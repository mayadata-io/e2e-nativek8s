#!/bin/bash

## SSH into the cluster to run the kubernetes jobs for the experiments
connect_cluster() {
sshpass -p $pass ssh -o StrictHostKeyChecking=no $lvm_user@$ip -p $port -o LogLevel=ERROR 'cd e2e-nativek8s && bash pipeline/stages/3-functional/3F09-lvmpv-snapshot-xfs run_job '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"' '"'$LVM_OPERATOR_NAMESPACE'"'

}

#######################################
# Deploy percona application on LVMPV #
#######################################

app_deploy() {

job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
lvm_operator_ns=$(echo $4)

time="date"
current_time=$(eval $time)

## Create the e2e-result-custom-resources for the jobs
bash pipeline/utils/pooling jobname:lvmpv-custom-topology
bash pipeline/utils/lvm-e2e-cr jobname:lvmpv-snapshot-xfs jobphase:Waiting
bash pipeline/utils/lvm-e2e-cr jobname:lvmpv-snapshot-xfs jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

## Generate the test name for running the e2e-test for percona deployment
test_name=$(bash pipeline/utils/generate_test_name testcase=percona-provision-snap-xfs metadata="")
echo $test_name

## copy the content of run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp apps/percona/deployers/run_e2e_test.yml percona_snap_xfs.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/app: percona-deployment/app: percona-deployment-snap-xfs/g' \
-e 's/generateName: percona-deploy-/generateName: percona-deploy-snap-xfs-/g' \
-e "/name: STORAGE_CLASS/{n;s/value: 'openebs-lvmsc'/value: 'openebs-lvmsc-xfs'/g}" \
-e "s/value: 'percona'/value: 'snap-xfs'/g" percona_snap_xfs.yml

cat percona_snap_xfs.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:percona-deployment-snap-xfs' job=percona_snap_xfs.yml
## Get the cluster state once the e2e-test job completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvmpv-snapshot-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deploy_rc_val=$(echo $?)
if [ "$app_deploy_rc_val" != "0" ]; then
exit 1;
fi

}

####################################
#     LVM volume snapshot xfs     #
####################################

lvmpv_snap_xfs() {

## Generate the test name for running the e2e-test for lvm-volume resize
run_id="xfs";test_name=$(bash pipeline/utils/generate_test_name testcase=lvmpv-snapshot metadata=${run_id})
echo $test_name

## copy the content of run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp experiments/functional/lvmpv-snapshot/run_e2e_test.yml lvmpv_snap_xfs.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/name: lvmpv-snapshot/name: lvmpv-snapshot-xfs/g' \
-e 's/test: lvmpv-snapshot/test: lvmpv-snapshot-xfs/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: snap-xfs/g}' \
-e '/name: APP_PVC/{n;s/.*/            value: percona-pvc/g}' \
-e '/name: APP_LABEL/{n;s/.*/            value: app=percona/g}' \
-e "/name: LVM_OPERATOR_NAMESPACE/{n;s/.*/            value: ${lvm_operator_ns}/g}" \
-e '/name: SNAPSHOT_CLASS/{n;s/.*/            value: lvmpv-snapclass/g}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: snap-xfs/g}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/g}' lvmpv_snap_xfs.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' lvmpv_snap_xfs.yml

sed -i '/parameters.yml: |/a \
    dbuser: root\
    dbpassword: k8sDem0\
    dbname: snap_xfs
' lvmpv_snap_xfs.yml

cat lvmpv_snap_xfs.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='test:lvmpv-snapshot-xfs' job=lvmpv_snap_xfs.yml
## Get the cluster state once the e2e job completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvmpv-snapshot-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

lvmpv_snap_xfs_rc_val=$(echo $?)
if [ "$lvmpv_snap_xfs_rc_val" != "0" ]; then
exit 1;
fi

}

############################################
#     LVM volume snapshot xfs deprovision  #
############################################

lvmpv_snap_xfs_dep() {

## Generate the test name for running the e2e-test for lvm-volume resize
run_id="xfs-dep";test_name=$(bash pipeline/utils/generate_test_name testcase=lvmpv-snapshot metadata=${run_id})
echo $test_name

## copy the content of run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp experiments/functional/lvmpv-snapshot/run_e2e_test.yml lvmpv_snap_xfs_dep.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/name: lvmpv-snapshot/name: lvmpv-snapshot-xfs-dep/g' \
-e 's/test: lvmpv-snapshot/test: lvmpv-snapshot-xfs-dep/g' \
-e '/name: APP_NAMESPACE/{n;s/.*/            value: snap-xfs/g}' \
-e '/name: APP_PVC/{n;s/.*/            value: percona-pvc/g}' \
-e '/name: APP_LABEL/{n;s/.*/            value: app=percona/g}' \
-e "/name: LVM_OPERATOR_NAMESPACE/{n;s/.*/            value: ${lvm_operator_ns}/g}" \
-e '/name: SNAPSHOT_CLASS/{n;s/.*/            value: lvmpv-snapclass/g}' \
-e '/name: SNAPSHOT_NAME/{n;s/.*/            value: snap-xfs/g}' \
-e '/name: DATA_PERSISTENCE/{n;s/.*/            value: mysql/g}' \
-e "/name: ACTION/{n;s/value: 'provision'/value: 'deprovision'/g}" lvmpv_snap_xfs_dep.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' lvmpv_snap_xfs_dep.yml

sed -i '/parameters.yml: |/a \
    dbuser: root\
    dbpassword: k8sDem0\
    dbname: snap_xfs
' lvmpv_snap_xfs_dep.yml

cat lvmpv_snap_xfs_dep.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='test:lvmpv-snapshot-xfs-dep' job=lvmpv_snap_xfs_dep.yml
## Get the cluster state once the e2e job completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvmpv-snapshot-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

lvmpv_snap_xfs_dep_rc_val=$(echo $?)
if [ "$lvmpv_snap_xfs_dep_rc_val" != "0" ]; then
exit 1;
fi

}

######################################
# deprovision percona application    #
#######################################

app_deprovision() {

## Generate the test name for running the e2e-test for percona deployment
test_name=$(bash pipeline/utils/generate_test_name testcase=percona-deprovision-snap-xfs metadata="")
echo $test_name

## copy the content of run_e2e_test.yml into a temporary file to update the test specific parameters.
cd lvm-localpv/e2e-tests
cp apps/percona/deployers/run_e2e_test.yml percona_snap_xfs_dep.yml

# Modify test specific values in runner file using sed command
sed -i -e 's/app: percona-deployment/app: percona-deprovision-snap-xfs/g' \
-e 's/generateName: percona-deploy-/generateName: percona-deprovision-snap-xfs-/g' \
-e "s/value: 'provision'/value: 'deprovision'/g" \
-e "s/value: 'percona'/value: 'snap-xfs'/g" percona_snap_xfs_dep.yml

cat percona_snap_xfs_dep.yml

## Run the e2e-test job and get the details of the job from e2e_job_runner utils.
bash ../../pipeline/utils/e2e_job_runner label='app:percona-deprovision-snap-xfs' job=percona_snap_xfs_dep.yml
## Get the cluster state once the e2e-test job completed.
bash ../../pipeline/utils/dump_cluster_state;
cd ../..
## Update the e2e event for the job.
bash pipeline/utils/event_updater jobname:lvmpv-snapshot-xfs $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

app_deprovision_rc_val=$(echo $?)

if [ "$app_deprovision_rc_val" -eq "0" ]; then

## Update the e2e-result-custom-resources for the job
bash pipeline/utils/lvm-e2e-cr jobname:lvmpv-snapshot-xfs jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass

else
## Update the e2e-result-custom-resources for the job
bash pipeline/utils/lvm-e2e-cr jobname:lvmpv-snapshot-xfs jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Fail
exit 1;
fi

}

if [ "$1" == "run_job" ];then
  app_deploy $2 $3 $4 $5
  lvmpv_snap_xfs
  lvmpv_snap_xfs_dep
  app_deprovision
else
  connect_cluster
fi
